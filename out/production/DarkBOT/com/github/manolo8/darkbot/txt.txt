  //TESTER
            Gui.PixelHelper helper = petGui.createHelper(30, 100);
            if (!b) {
                JFrame jFrame = new JFrame();

                final BufferedImage image = new BufferedImage(helper.width, helper.height, 1);

                final Point main = new Point();

                JPanel jPanel = new JPanel() {
                    @Override
                    public void paint(Graphics g) {
                        g.drawImage(image, 0, 0, null);
                        image.setRGB(0, 0, helper.width, helper.height, helper.pixels, 0, helper.width);
                        main.x = 0;
                        main.y = 0;
                    }
                };


                jPanel.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {

                        if (e.getX() <= image.getWidth() && e.getY() <= image.getHeight()) {
                            if (main.x == 0 && main.y == 0) {
                                main.x = e.getX();
                                main.y = e.getY();
                            }

                            System.out.println((e.getX() - main.x) + " " + (e.getY() - main.y) + " = " + helper.at(e.getX(), e.getY()));
                        }

                    }
                });

                jFrame.add(jPanel);

                jFrame.setSize(640, 480);
                jFrame.setVisible(true);

                b = true;
            }
            //TESTER










    final WinDef.HDC hdcWindow = USER.GetDC(flash);

        final WinDef.HDC hdcMemDC = GDI.CreateCompatibleDC(hdcWindow);

        WinDef.HBITMAP hBitmap = GDI.CreateCompatibleBitmap(hdcWindow, width, height);

        final HANDLE hOld = GDI.SelectObject(hdcMemDC, hBitmap);

        GDI.BitBlt(hdcMemDC, 0, 0, width, height, hdcWindow, x, y, 0x00CC0020);

        GDI.SelectObject(hdcMemDC, hOld);
        GDI.DeleteDC(hdcMemDC);

        final WinGDI.BITMAPINFO bmi = new WinGDI.BITMAPINFO();
        bmi.bmiHeader.biWidth = width;
        bmi.bmiHeader.biHeight = -height;
        bmi.bmiHeader.biPlanes = 1;
        bmi.bmiHeader.biBitCount = 32;
        bmi.bmiHeader.biCompression = WinGDI.BI_RGB;

        if (this.allocator.size() < width * height * 4) {
            this.allocator = new Memory(width * height * 4);
        }

        GDI.GetDIBits(hdcWindow, hBitmap, 0, height, allocator, bmi, WinGDI.DIB_RGB_COLORS);

        int size = width * height;

        if (pixels.length < size) {
            pixels = new int[size];
        }

        allocator.read(0, pixels, 0, size);

        GDI.DeleteObject(hBitmap);
        User32.INSTANCE.ReleaseDC(flash, hdcWindow);
